<div class="content-container">
   <div class="jumbotron">
      <h1> Keynote Speakers </h1>
<p>
      <p>
      We are excited to have two keynote speakers to provide 
      perspectives on data management and analysis from the forefront of 
      their domains -- self-driving vehicles and data warehousing in the cloud!
      </p>
   </div>
   <div class="page-content">

      <h2>Self-Driving Vehicles, SLAM, and Databases<br>
          John Leonard &nbsp; <small>MIT Department of Mechanical Engineering and MIT CSAIL</small> </h2>

      <h3>Abstract</h3>
      <p>
Self-driving vehicles have the potential to revolutionize our transportation infrastructure, but also raise major challenges for research and policy development. Led by the efforts of Google and many leading automobile manufacturers, interest in the field of self-driving vehicles has surged in the past several years. In this talk, I will describe some of the core technologies of mobile robotics that underpin self-driving vehicles and other new applications of robotics, including: sensing, mapping, navigation, and path-planning. Despite recent progress, fully autonomous driving remains extremely difficult, with a number of difficult open questions. I will also describe the role of Simultaneous Localization and Mapping (SLAM) algorithms in self-driving, and will discuss potential connections of self-driving and SLAM with database algorithms and technology.
      </p>
      <h3>Bio</h3>
      <p>
John J. Leonard is Samuel C. Collins Professor of Mechanical and Ocean Engineering and Associate Department Head for Research in the MIT Department of Mechanical Engineering. He is also a member of the MIT Computer Science and Artificial Intelligence Laboratory (CSAIL). His research addresses the problems of navigation and mapping for autonomous mobile robots and underwater vehicles. He is an IEEE Fellow (2014).
      </p>

      <h2>Data Warehousing in the Cloud – The Death of Shared Nothing<br>
          David J. DeWitt &nbsp; <small>MIT CSAIL</small> <br>
          Willis Lang &nbsp; <small>Microsoft Jim Gray Systems Lab</small> </h2>
 
      <h3>Abstract</h3>
      <p>
For more than 30 years, parallel database systems such as those from Teradata, Microsoft, Netezza, and Vertica have been employed a “shared-nothing” design in which storage and compute are co-located. Recently, several cloud-based data warehousing (DW) SAAS solutions have appeared including Amazon Redshift™, Microsoft’s SQL Data Warehouse™, the Snowflake Elastic Data Warehouse™ service, and Google’s BigQuery™. Except for Redshift, every cloud DW SAAS offering that we are aware of is based on a shared-storage design, and not the shared-nothing design paradigm. In this talk we explain why the marketplace for cloud DW offerings has exploded and is expected to continue to expand in the years to come. We will briefly describe each of the four services, highlighting their key architectural features and motivate why we expect that the designs based on a shared-storage paradigm to dominate going forward.
      </p>
      <h3>DeWitt Bio</h3>
David DeWitt was a faculty member in the Computer Sciences Department at the University of Wisconsin-Madison from 1976 to 2008. In March 2008 he retired from UW-Madison and joined Microsoft as a Technical Fellow to start the Jim Gray Systems Laboratory. In the fall of 2016 he left Microsoft to move to Boston to join the MIT faculty. Professor DeWitt is a member of the National Academy of Engineering and a Fellow of the American Academy of Arts and Sciences. His pioneering contributions to the field of scalable database systems for “big data” were recognized by ACM with the 2009 Software Systems Award.
      <h3>Willis Bio</h3>
Willis Lang is a senior scientist working for Microsoft at the Jim Gray Systems Laboratory. He obtained his PhD from the University of Wisconsin-Madison. His researcher/developer role at Microsoft has resulted in product impact across Azure SQL Database, Azure DW, SQL Server, and APS in the areas of performance/scalability, SAAS efficiency, manageability, security, and fault tolerance.
      <p>
      </p>
   </div>
</div>
